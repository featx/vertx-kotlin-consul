plugins {
  id 'application'
  id 'org.jetbrains.kotlin.jvm' version "$kotlinVersion"
  id 'com.github.johnrengelman.shadow' version "$shadowVersion"
}

group = "org.featx.cusp.user"
version = "1.0.0-SNAPSHOT"

repositories {
  mavenCentral()
}

ext {
//  kotlinVersion = "${kotlin.version}"
//  vertxVersion = "${vertx.version}"
//  junitJupiterEngineVersion = "${junitVersion}"
}

application {
  mainClassName = 'io.vertx.core.Launcher'
}


def mainVerticleName = "org.featx.cusp.user.MainVerticle"
def watchForChange = "src/**/*"
def doOnChange = "./gradlew classes"

dependencies {
  implementation(platform("io.vertx:vertx-stack-depchain:$vertxVersion"))

  implementation("io.vertx:vertx-service-discovery")
  implementation("io.vertx:vertx-config")
  implementation("io.vertx:vertx-consul-client")
  implementation("io.vertx:vertx-circuit-breaker")
  implementation("io.vertx:vertx-health-check")

  implementation("io.vertx:vertx-web")
  implementation("io.vertx:vertx-web-api-contract")
  implementation("io.vertx:vertx-web-sstore-redis")
  implementation("io.vertx:vertx-web-openapi")
  implementation("io.vertx:vertx-web-client")
  implementation("io.vertx:vertx-web-validation")

  implementation("io.vertx:vertx-redis-client")
  implementation("io.vertx:vertx-mysql-client")
//  implementation("io.vertx:vertx-jdbc-client")

//  implementation("io.vertx:vertx-rx-java3")
//  implementation("io.vertx:vertx-reactive-streams")
  implementation("com.google.inject:guice:$guiceVersion")
  implementation("io.vertx:vertx-lang-kotlin")
  implementation("io.vertx:vertx-lang-kotlin-coroutines")
//  implementation("io.vertx:vertx-core")
//  implementation('com.englishtown.vertx:vertx-guice:2.3.1')
  implementation("com.zaxxer:HikariCP:$hikariVersion")
  implementation("org.mariadb:r2dbc-mariadb:1.0.1")
  //  implementation(kotlin("stdlib-jdk8"))

  testImplementation("io.vertx:vertx-junit5")
  testImplementation("org.junit.jupiter:junit-jupiter:$junitVersion")
  testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:$junitVersion")
  testImplementation("org.junit.jupiter:junit-jupiter-api:$junitVersion")
}

compileKotlin {
  kotlinOptions.jvmTarget = "16"//JavaVersion.VERSION_16
}

compileTestKotlin {
  kotlinOptions.jvmTarget = "16"
}

shadowJar {
  classifier = 'fat'
  manifest {
    attributes 'Main-Verticle': mainVerticleName
  }
  mergeServiceFiles {
    include 'META-INF/services/io.vertx.core.spi.VerticleFactory'
  }
}

test {
  useJUnitPlatform()
  testLogging {
    events 'PASSED', 'FAILED', 'SKIPPED'
  }
}

run {
  args = ['run', mainVerticleName, "--redeploy=$watchForChange", "--launcher-class=$mainClassName", "--on-redeploy=$doOnChange"]
}
